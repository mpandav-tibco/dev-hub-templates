apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: bwce-template-complex
  title: BWCE - Define Processes
  description: Create a new BWCE project with a number of processes
  tags:
    - tibco
    - bwce
    - recommended
spec:
  owner: ACME
  type: service

  parameters:
    - title: KLM BWCE Project Template
      type: object
      required:
        - title
      properties:
        name:
          title: Name
          type: string
          description: Unique name of the BWCE Project
          ui:field: EntityNamePicker
          ui:autofocus: true
        description:
          title: Description
          type: string
          description: A description for the BWCE Project
        tasks:
          type: array
          title: Initial BW Processes
          items:
            type: object
            required:
              - title
            properties:
              bw_process_name:
                type: string
                title: Name
                description: Name of the Business Works process
                default: New Process
              bw_process_type:
                title: Type of BW Process
                description: Type of BW Process
                type: string
                ui:widget: select
                default: POM Output (REST)
                enum:
                  - POM Input (REST)
                  - POM Output (REST)
                  - POM Input (SOAP)
                  - POM Output (SOAP)
              description:
                type: string
                title: Process Description
                description: Enter a description for your process
                ui:widget: "textarea"
                ui:options:
                  backgroundColor: "yellow"


  # This template is meant to be used on top of an existing template.
  # By adding the following and fetching from an absolute URL you can
  # add in the docs template
  steps:
    - id: fetch
      name: BWCE Skeleton
      action: fetch:template
      input:
        url: ./skeleton-order-to-kafka
        values:
          name: ${{ parameters.name }}
          description: ${{ parameters.description }}
          destination: ${{ parameters.repoUrl | parseRepoUrl }}
          owner: ${{ parameters.owner }}
          system: ${{ parameters.system }}

    - id: publish
      name: Publish
      action: publish:github
      input:
        allowedHosts: ["github.com"]
        description: This is ${{ parameters.name }}
        repoUrl: ${{ parameters.repoUrl }}

    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: "/catalog-info.yaml"

  output:
    links:
      - title: Repository
        url: ${{ steps.publish.output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}
